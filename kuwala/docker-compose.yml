version: '3.1'

services:

  neo4j:
    container_name: neo4j
    build:
      context: .
      dockerfile: ./core/neo4j/docker/dockerfile
    restart: always
    environment: 
      - NEO4J_AUTH=none
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=4G
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - ./tmp/kuwala/db/neo4j/data:/data
    profiles:
      - core
      - network

  jupyter:
    container_name: jupyter
    build:
      context: .
      dockerfile: ./core/jupyter/docker/dockerfile
    restart: always
    environment: 
      - NEO4J_HOST=bolt://neo4j:7687
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./common/jupyter/modules:/home/jovyan/kuwala/modules
      - ./common/jupyter/notebooks:/home/jovyan/kuwala/notebooks
      - ./common/jupyter/resources:/home/jovyan/kuwala/resources
    ports:
      - '8888:8888'
    profiles:
      - network

  torproxy:
    container_name: kuwala-pipelines_torproxy
    image: dperson/torproxy:latest
    environment: 
      - TOR_MaxCircuitDirtiness=10
    restart: always
    ports:
      - '9050:9050'
    profiles:
      - network
      - google-poi-scraper
      - proxy

  # docker-compose run admin-boundaries --continent=<> --country=<> --country_region=<>
  admin-boundaries:
    container_name: admin-boundaries
    environment:
      - SPARK_MEMORY=16g
    build:
      context: .
      dockerfile: ./pipelines/admin-boundaries/dockerfile
    volumes:
      - ./tmp/kuwala/osmFiles:/opt/tmp/kuwala/osmFiles
      - ./tmp/kuwala/adminBoundaries:/opt/pipelines/app/tmp
    restart: always
    profiles:
      - network


  # docker-compose --profile google-poi-scraper up
  google-poi-api:
    container_name: google-poi-api
    environment:
      - PROXY_ADDRESS=socks5://kuwala-pipelines_torproxy:9050
      - QUART_DEBUG=False
    build:
      context: .
      dockerfile: ./pipelines/google-poi/dockerfile
    restart: always
    depends_on: [torproxy]
    ports:
      - '3003:3003'
    profiles:
      - network
      - google-poi-scraper

  # docker-compose run google-poi-pipeline
  google-poi-pipeline:
    container_name: google-poi-pipeline
    environment:
      - GOOGLE_POI_API_HOST=google-poi-api
      - SPARK_MEMORY=16g
    build:
      context: .
      dockerfile: ./pipelines/google-poi/src/pipeline/dockerfile
    volumes:
      - ./tmp/kuwala/googleFiles:/opt/pipelines/app/tmp/googleFiles
      - ./tmp/kuwala/osmFiles:/opt/pipelines/app/tmp/osmFiles
    restart: always
    profiles:
      - network

  # docker-compose run neo4j-importer
  neo4j-importer:
    environment: 
      - NEO4J_HOST=bolt://neo4j:7687
      - SPARK_MEMORY=16g
    build:
      context: .
      dockerfile: ./core/neo4j/importer/dockerfile
    volumes:
      - ./tmp/kuwala:/opt/core/app/importer/tmp/kuwala
    restart: always
    depends_on: [neo4j]
    profiles:
      - network

  # docker-compose run osm-parquetizer java -jar target/osm-parquetizer-1.0.1-SNAPSHOT.jar <pbf-path> <parquet-path>
  osm-parquetizer:
    build:
      context: .
      dockerfile: ./pipelines/osm-poi/osm-parquetizer/dockerfile
    restart: always
    volumes:
      - ./tmp/kuwala/osmFiles:/opt/app/tmp/osmFiles
    profiles:
      - network

  # docker-compose run osm-poi
  osm-poi:
    build:
      context: .
      dockerfile: ./pipelines/osm-poi/dockerfile
    environment:
      - SPARK_MEMORY=16g
      - PROXY_ADDRESS=socks5://kuwala-pipelines_torproxy:9050
    restart: always
    depends_on: [torproxy]
    volumes:
      - ./tmp/kuwala/osmFiles:/opt/pipelines/app/tmp/osmFiles
    profiles:
      - network


  # docker-compose run  population-density
  population-density:
    build:
      context: .
      dockerfile: ./pipelines/population-density/dockerfile
    environment:
      - SPARK_MEMORY=16g
    restart: always
    volumes:
      - ./tmp/kuwala/populationFiles:/opt/pipelines/app/tmp/populationFiles
    profiles:
      - network
